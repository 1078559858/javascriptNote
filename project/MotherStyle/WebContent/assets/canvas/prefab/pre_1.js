
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * pre_1.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function pre_1(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _Dialog_mc = this.game.add.button(-153, -359, 'Dialog_mc', null, this, null, null, null, null, this);
	_Dialog_mc.scale.setTo(1.5, 1.5);
	
	this.game.add.sprite(0, 0, 'pop', null, this);
	
	var _close_png = this.game.add.button(560, 0, 'common1', this.clickClose, this, null, 'close.png', null, null, this);
	_close_png.scale.setTo(1.5, 1.5);
	
	
	
}

/** @type Phaser.Group */
var pre_1_proto = Object.create(Phaser.Group.prototype);
pre_1.prototype = pre_1_proto;
pre_1.prototype.constructor = pre_1;

/* --- end generated code --- */
// -- user code here --


pre_1.prototype.appearPopLayer = function () {
	this.x = 375;
	this.y = 603;
	this.scale.x = 0;
	this.scale.y = 0;

	this.game.add.tween(this.scale).to({x:1, y:1}, 1500, Phaser.Easing.Bounce.Out, true);

	this.convertImageAppear();
};

pre_1.prototype.initOnce  = function () {
	this.pivot.x = 375;
	this.pivot.y = 603;

	// this.fDialog_home_error.visible = false;
	// this.fDialog_home_fourl.visible = false;
	// this.fDialog_home_null.visible = false;
	//
	// this.gChatInput = this.game.make.inputField(240, 880, {
	// 	font: '30px Arial',
	// 	fill: '#000000',
	// 	fontWeight: 'bold',
	// 	width: 150,
	// 	height:43,
	// 	padding: 1,
	// 	borderWidth: 1,
	// 	borderColor: '#ffffff',
	// 	borderRadius: 6,
	// 	fillAlpha:1,
	// 	placeHolder: "  输入姓名",
	// 	textAlign:"center",
	// 	type: PhaserInput.InputType.text
	// });
	//
	// this.addChild(this.gChatInput);
	//
	// var _thisChat = this;
	// this.gChatInput.focusIn.add(function () {
	// 	_thisChat.focusIn();
	// }, this);
	//
	// this.gChatInput.focusOut.add(function () {
	// 	_thisChat.focusOut();
	// }, this);
};

pre_1.prototype.clickClose = function () {
	this.game.add.tween(this.scale).to({x:0, y:0}, 1000, Phaser.Easing.Bounce.Out, true);

	this.convertImageDisappear();
	gGame.gameScene.fGroupOver.convertImageAppear();
};

pre_1.prototype.convertImageDisappear = function () {
	var img = $('#id_pop_layer_up')[0];
	img.style.width = 0 + 'px';
	img.style.height = 0 + 'px';
};

pre_1.prototype.convertImageAppear = function () {
	var img = $('#id_pop_layer_up')[0];
	img.src = gUserInfo.overFileName;
	img.style.opacity = 0;
	var tsWidth = Math.round(640/ this.game.scale.scaleFactor.x);
	var tsHeight = Math.round(1008 / this.game.scale.scaleFactor.y);
	if(!gUserInfo.overpicWidth){
		gUserInfo.overpicWidth = tsWidth + 'px';
	}

	if(!gUserInfo.overpicHeight){
		gUserInfo.overpicHeight = tsHeight +'px';
	}

	if(!gUserInfo.overpicMarginUp){
		gUserInfo.overpicMarginUp = tsHeight*1/20;
	}

	img.style.width = gUserInfo.overpicWidth;
	img.style.height = gUserInfo.overpicHeight;
	img.style.margin = gUserInfo.overpicMarginUp + 'px 0px 0px ' + this.game.scale.bounds.x + 'px';
	//img.style.opacity = 0;
};

pre_1.prototype.focusIn = function () {
	this.fDialog_home_error.visible = false;
	this.fDialog_home_fourl.visible = false;
	this.fDialog_home_null.visible = false;
};

pre_1.prototype.focusOut = function () {

};

pre_1.prototype.clickLeft = function () {
	this.game.state.states.Video.playClick();
	this.fBall.x = 161;
	gUserInfo.haveBoy = true;
};

pre_1.prototype.clickRight = function () {
	this.game.state.states.Video.playClick();
	this.fBall.x = 350;
	gUserInfo.haveBoy = false;
};
