
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * bet.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function bet(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	this.game.add.sprite(0, 0, 'bet', 'betbg.png', this);
	
	var _btn_5000 = this.game.add.button(371, 8, 'bet', this.clickChangeBetLevel, this, null, '5000.png', '5000.png', '5000.png', this);
	_btn_5000.data = {
	"value":5000
	};
	
	var _btn_1000 = this.game.add.button(256, 8, 'bet', this.clickChangeBetLevel, this, null, '1000.png', '1000.png', '1000.png', this);
	_btn_1000.data = {
	"value":1000
	};
	
	var _btn_500 = this.game.add.button(141, 8, 'bet', this.clickChangeBetLevel, this, null, '500.png', '500.png', '500.png', this);
	_btn_500.data = {
	"value":500
	};
	
	var _btn_1W = this.game.add.button(486, 8, 'bet', this.clickChangeBetLevel, this, null, '10000.png', '10000.png', '10000.png', this);
	_btn_1W.data = {
	"value":10000
	};
	
	var _btn_100 = this.game.add.button(26, 7, 'bet', this.clickChangeBetLevel, this, null, '100.png', '100.png', '100.png', this);
	_btn_100.data = {
	"value":100
	};
	
	var _repeat_btn = this.game.add.button(615, 5, 'btn', this.clickRepeat, this, null, 'repeat.png', null, null, this);
	
	var _xuanzhong_png = this.game.add.sprite(19, -3, 'bet', 'xuanzhong.png', this);
	
	
	
	// public fields
	
	this.fBtn_5000 = _btn_5000;
	this.fBtn_1000 = _btn_1000;
	this.fBtn_500 = _btn_500;
	this.fBtn_1W = _btn_1W;
	this.fBtn_100 = _btn_100;
	this.fRepeat_btn = _repeat_btn;
	this.fXuanzhong_png = _xuanzhong_png;
	/* --- post-init-begin --- */
	// you can insert code here

	//create Text
	this.initBet();

	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var bet_proto = Object.create(Phaser.Group.prototype);
bet.prototype = bet_proto;
bet.prototype.constructor = bet;

/* --- end generated code --- */
// -- user code here --



bet.prototype.clickChangeBetLevel = function (button) {
	gUserInfo.betLevel = button.data.value;

	this.fXuanzhong_png.x = button.x  - 7 - button.width/2;
};

bet.prototype.clickRepeat = function () {
	// if(!gGame.gameScene.isBetting()){
	// 	("非投注时间，无法投注！");
	// 	return;
	// }

	gUserInfo.betAuto = !gUserInfo.betAuto;
};

bet.prototype.initBet = function () {
	this.setAnchorMiddle(this.fBtn_100);
	this.setAnchorMiddle(this.fBtn_500);
	this.setAnchorMiddle(this.fBtn_1000);
	this.setAnchorMiddle(this.fBtn_5000);
	this.setAnchorMiddle(this.fBtn_1W);
};

bet.prototype.update = function () {
	if(gUserInfo.betAuto){
		this.fRepeat_btn.setFrames("repeat2.png","repeat2.png","repeat2.png","repeat2.png")
	}else{
		this.fRepeat_btn.setFrames("repeat.png", "repeat.png","repeat.png","repeat.png");
	}
};

//must init in mainScene.js
bet.prototype.setBtnClickScale = function () {
	this.fBtn_100.onInputDown.add(gGame.gameScene.clickDownEvent,this);
	this.fBtn_100.onInputUp.add(gGame.gameScene.clickUpEvent,this);

	this.fBtn_500.onInputDown.add(gGame.gameScene.clickDownEvent,this);
	this.fBtn_500.onInputUp.add(gGame.gameScene.clickUpEvent,this);

	this.fBtn_1000.onInputDown.add(gGame.gameScene.clickDownEvent,this);
	this.fBtn_1000.onInputUp.add(gGame.gameScene.clickUpEvent,this);

	this.fBtn_5000.onInputDown.add(gGame.gameScene.clickDownEvent,this);
	this.fBtn_5000.onInputUp.add(gGame.gameScene.clickUpEvent,this);

	this.fBtn_1W.onInputDown.add(gGame.gameScene.clickDownEvent,this);
	this.fBtn_1W.onInputUp.add(gGame.gameScene.clickUpEvent,this);
};

bet.prototype.playerRepeatBet = function () {
	for(var i = 0; i < gUserInfo.betLast.length; i++){
		if(gUserInfo.betLast[i] > 0){

		}
	}
};

bet.prototype.setAnchorMiddle = function (spr) {
	spr.anchor.set(0.5,0.5);
	spr.x += spr.width/2;
	spr.y += spr.height/2;
};