
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * betChoicePrefab.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function betChoicePrefab(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _groupZhuWin = new betOptPrefab(this.game, this);
	_groupZhuWin.position.setTo(31, 19);
	
	var _groupPingWin = new betOptPrefab(this.game, this);
	_groupPingWin.position.setTo(267, 20);
	
	var _groupKeWin = new betOptPrefab(this.game, this);
	_groupKeWin.position.setTo(503, 19);
	
	var _groupDan = new betOptPrefab(this.game, this);
	_groupDan.position.setTo(31, 242);
	
	var _groupShuang = new betOptPrefab(this.game, this);
	_groupShuang.position.setTo(267, 242);
	
	var _groupRang = new betOptPrefab(this.game, this);
	_groupRang.position.setTo(503, 242);
	
	
	
	// public fields
	
	this.fGroupZhuWin = _groupZhuWin;
	this.fGroupPingWin = _groupPingWin;
	this.fGroupKeWin = _groupKeWin;
	this.fGroupDan = _groupDan;
	this.fGroupShuang = _groupShuang;
	this.fGroupRang = _groupRang;
	/* --- post-init-begin --- */
	// you can insert code here

	//create Text
	this.fGroupZhuWin.fBetBtn.data = {"idx":0};
	this.fGroupPingWin.fBetBtn.data = {"idx":1};
	this.fGroupKeWin.fBetBtn.data = {"idx":2};
	this.fGroupDan.fBetBtn.data = {"idx":3};
	this.fGroupShuang.fBetBtn.data = {"idx":4};
	this.fGroupRang.fBetBtn.data = {"idx":5};
	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var betChoicePrefab_proto = Object.create(Phaser.Group.prototype);
betChoicePrefab.prototype = betChoicePrefab_proto;
betChoicePrefab.prototype.constructor = betChoicePrefab;

/* --- end generated code --- */
// -- user code here --

//who 0\1\2\3\4\5

betChoicePrefab.prototype.appearWin = function (obj) {
	for(var key in obj){
		if(obj[key]){
			this.getGroup(key).appearWin();
		}
	}
};

betChoicePrefab.prototype.disAppearWin = function () {
	for(var i = 0; i <this.children.length; i++){
		this.children[i].disAppearWin();
	}
};

betChoicePrefab.prototype.changeGray = function (isGray) {
	if(isGray){
		this.fGroupZhuWin.fBetBtn.setFrames("hehe1.png", "hehe1.png","hehe1.png","hehe1.png");
		this.fGroupPingWin.fBetBtn.setFrames("hehe1.png", "hehe1.png","hehe1.png","hehe1.png");
		this.fGroupKeWin.fBetBtn.setFrames("hehe1.png", "hehe1.png","hehe1.png","hehe1.png");
		this.fGroupDan.fBetBtn.setFrames("hehe2.png", "hehe2.png","hehe2.png","hehe2.png");
		this.fGroupShuang.fBetBtn.setFrames("hehe2.png", "hehe2.png","hehe2.png","hehe2.png");
		this.fGroupRang.fBetBtn.setFrames("hehe3.png", "hehe3.png","hehe3.png","hehe3.png");
		return;
	}

	this.fGroupZhuWin.fBetBtn.setFrames("betChoice2.png", "betChoice2.png","betChoice2.png","betChoice2.png");
	this.fGroupPingWin.fBetBtn.setFrames("betChoice2.png", "betChoice2.png","betChoice2.png","betChoice2.png");
	this.fGroupKeWin.fBetBtn.setFrames("betChoice2.png", "betChoice2.png","betChoice2.png","betChoice2.png");
	this.fGroupDan.fBetBtn.setFrames("betChoice1.png", "betChoice1.png","betChoice1.png","betChoice1.png");
	this.fGroupShuang.fBetBtn.setFrames("betChoice1.png", "betChoice1.png","betChoice1.png","betChoice1.png");
	this.fGroupRang.fBetBtn.setFrames("betChoice3.png", "betChoice3.png","betChoice3.png","betChoice3.png");
};

//0~5
betChoicePrefab.prototype.getGroup = function (idx) {
	idx = Number(idx);

	switch (idx){
		case 0:return this.fGroupZhuWin;
		case 1:return this.fGroupPingWin;
		case 2:return this.fGroupKeWin;
		case 3:return this.fGroupDan;
		case 4:return this.fGroupShuang;
		case 5:return this.fGroupRang;
		default:
			GlobalUtils.MessageLog("group is not defined! idx=", idx);
			break;
	}

	return null;
};

betChoicePrefab.prototype.createInit = function () {
	this.changeGray(false);

	for(var i = 0; i < this.children.length; i++){
		this.children[i].createInit();
	}
};

betChoicePrefab.prototype.initOnce = function () {
	gGame.gameScene.setAnchorMiddle(this.fGroupZhuWin.fMain_png);
	gGame.gameScene.setAnchorMiddle(this.fGroupPingWin.fMain_png);
	gGame.gameScene.setAnchorMiddle(this.fGroupKeWin.fMain_png);
	gGame.gameScene.setAnchorMiddle(this.fGroupDan.fMain_png);
	gGame.gameScene.setAnchorMiddle(this.fGroupShuang.fMain_png);
	gGame.gameScene.setAnchorMiddle(this.fGroupRang.fMain_png);

	this.fGroupZhuWin.fMain_png.frameName = "main.png";
	this.fGroupPingWin.fMain_png.frameName = "ping.png";
	this.fGroupKeWin.fMain_png.frameName = "kewin.png";
	this.fGroupDan.fMain_png.frameName = "dan.png";
	this.fGroupShuang.fMain_png.frameName = "double.png";
	this.fGroupRang.fMain_png.frameName = "rang.png";
};

betChoicePrefab.prototype.playerBetResult = function (obj) {
	if(obj.err){
		console.log("投注失败！", JSON.stringify(obj.err));
		return;
	}

	var count = obj.count;
	var who = obj.who;
	var uid = obj.uid;
	var nick = obj.nick;

	gUserInfo.power = obj.power || 0;
	gUserInfo.money = obj.money|| 0;

	if(uid === gUserInfo.uid){
		gUserInfo.betMine[who] += count;
		gGame.gameScene.fPlayerPrefab.updateMess();
		this.getGroup(who).actionBonusAltas(count);
	}

	gUserInfo.betTotal[who] += count;
	this.updateBetMineAndBetTotalText();
};

betChoicePrefab.prototype.setAnchorMiddle = function (spr) {
	spr.anchor.set(0.5,0.5);
	spr.x += spr.width/2;
	spr.y += spr.height/2;
};

betChoicePrefab.prototype.updateBetMineAndBetTotalText = function (arrMine, arrTotal) {
	arrMine = arrMine || gUserInfo.betMine || [0,0,0,0,0,0];
	arrTotal = arrTotal || gUserInfo.betTotal || [0,0,0,0,0,0,0];

	for(var i = 0; i < arrMine.length && i < arrTotal.length; i++){
		var group = this.getGroup(i);
		group.setBetMineText(arrMine[i]);
		group.setBetTotalText(arrTotal[i]);
	}
};

betChoicePrefab.prototype.updateBonusTimesText = function (arr) {
	arr = arr || gRoomInfo.betPrice || ["","","","","",""];

	for(var i = 0; i < arr.length; i++){
		if(i < 3){
			this.getGroup(i).setBonusTimes("three", arr[i]);
		}else if(i < 5){
			this.getGroup(i).setBonusTimes("two", arr[i]);
		}else{
			this.getGroup(i).setBonusTimes("one", arr[i]);
		}
	}
};

