
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * menuPrefabLayer.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function menuPrefabLayer(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _bg_btn = this.game.add.button(-44, -48, 'bg', this.clickMenu, this, null, 'exchangebg.png', null, null, this);
	_bg_btn.scale.setTo(0.0, 55.0);
	_bg_btn.alpha = 0.0;
	
	this.game.add.button(659, 11, 'btn', this.clickMenu, this, null, 'set.png', null, null, this);
	
	var _groupMenu = this.game.add.group(this);
	_groupMenu.scale.setTo(0.0, 1.0);
	
	this.game.add.button(508, 401, 'btn', this.clickMusic, this, null, 'music1.png', null, null, _groupMenu);
	
	this.game.add.button(508, 325, 'btn', this.clickSound, this, null, 'sound1.png', null, null, _groupMenu);
	
	this.game.add.button(508, 249, 'btn', this.clickJingCai, this, null, 'jingcai.png', null, null, _groupMenu);
	
	this.game.add.button(508, 173, 'btn', this.clickRule, this, null, 'gameroule.png', null, null, _groupMenu);
	
	this.game.add.button(508, 97, 'btn', this.clickNewbie, this, null, 'xinshou.png', null, null, _groupMenu);
	
	var _groupRule = this.game.add.group(this);
	_groupRule.scale.setTo(0.0, 1.0);
	
	this.game.add.sprite(47, 125, 'pop', 'rule.png', _groupRule);
	
	this.game.add.button(607, 130, 'pop', this.clickMenu, this, null, 'close.png', null, null, _groupRule);
	
	var _groupJingChai = this.game.add.group(this);
	
	this.game.add.sprite(47, 125, 'pop', 'bg (2).png', _groupJingChai);
	
	this.game.add.button(611, 131, 'pop', this.clickMenu, this, null, 'close.png', null, null, _groupJingChai);
	
	this.game.add.text(312, 152, '竞猜记录', {"font":"bold 34px Arial","fill":"#111111"}, _groupJingChai);
	
	var _groupOne = this.game.add.group(_groupJingChai);
	
	
	
	// public fields
	
	this.fBg_btn = _bg_btn;
	this.fGroupMenu = _groupMenu;
	this.fGroupRule = _groupRule;
	this.fGroupJingChai = _groupJingChai;
	this.fGroupOne = _groupOne;
	/* --- post-init-begin --- */
	// you can insert code here

	this.touchPoint = {
		"pointY":0,
		"cellHeightMin":213,			//table cell 的初始高度
		"cellHeightMax":845,			//table cell 的初始高度
		"isDown":false,			//判断是否是按下状态
		"isMoved":false			//判断是否是移动状态
	};

	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var menuPrefabLayer_proto = Object.create(Phaser.Group.prototype);
menuPrefabLayer.prototype = menuPrefabLayer_proto;
menuPrefabLayer.prototype.constructor = menuPrefabLayer;

/* --- end generated code --- */
// -- user code here --

menuPrefabLayer.prototype.initOnce = function () {
	this.setMask();
	this.setGroupClose(this.fGroupJingChai);
};

menuPrefabLayer.prototype.appearMenu = function () {
	this.setGroupClose(this.fGroupRule);
	this.setGroupClose(this.fGroupJingChai);

	this.fGroupMenu.scale.x = 1;
	this.fBg_btn.scale.x = 15;

	for(var i = 0; i < this.fGroupMenu.children.length; i++){
		var obj = this.fGroupMenu.getChildAt(i);
		obj.x = this.fGroupMenu.getChildAt(this.fGroupMenu.children.length - 1).x;
		obj.y = this.fGroupMenu.getChildAt(this.fGroupMenu.children.length - 1).y;
	}

	for(var i = 0; i < this.fGroupMenu.children.length; i++){
		var spr = this.fGroupMenu.getChildAt(i);
		this.game.add.tween(spr).to({"x":spr.x, y:spr.y + spr.height*(this.fGroupMenu.children.length - i - 1)
			}, 300, Phaser.Easing.Exponential.Out, true);
	}
};

menuPrefabLayer.prototype.disAppearMenu = function () {
	for(var i = 0; i < this.fGroupMenu.children.length; i++){
		var spr = this.fGroupMenu.getChildAt(i);
		var tween = this.game.add.tween(spr).to({"x":spr.x, y:spr.y - spr.height*(this.fGroupMenu.children.length - i - 1)
		}, 130, Phaser.Easing.Linear.None, true);
		tween.onComplete.add(function (fSpr, fTween) {
			this.fGroupMenu.scale.x = 0;
		}, this);
	}
};

menuPrefabLayer.prototype.clickMenu = function () {
	if(this.touchPoint.isMoved){
		return;
	}

	if(this.fBg_btn.scale.x === 15){  			//隐藏menu菜单
		this.closeLayer();
	}else{
		this.appearMenu();							//显示menu菜单
	}
};

menuPrefabLayer.prototype.clickNewbie = function () {
	this.clickMenu();

};

menuPrefabLayer.prototype.clickRule = function () {
	this.disAppearMenu();

	this.setGroupAppear(this.fGroupRule);
};

menuPrefabLayer.prototype.clickJingCai = function () {
	this.disAppearMenu();

	this.initJingChai();
	this.setGroupAppear(this.fGroupJingChai);
};

menuPrefabLayer.prototype.clickSound = function () {
	this.clickMenu();

};

menuPrefabLayer.prototype.clickMusic = function () {
	this.clickMenu();

};

menuPrefabLayer.prototype.closeLayer = function () {
	this.disAppearMenu();						//隐藏五个menu菜单选项
	this.setGroupClose(this.fGroupRule);		//隐藏rule layer
	this.setGroupClose(this.fGroupJingChai);	//隐藏竞猜 layer
	this.fBg_btn.scale.x = 0;					//隐藏背景 btn

	//移除事件
	this.game.input.onDown.remove(this.onDown, "down");
	this.game.input.onUp.remove(this.onUp, "up");
	this.game.input.deleteMoveCallback(this.onMoveCallBack, "move");

	//移除添加的table cell
	this.fGroupOne.removeAll();
};

menuPrefabLayer.prototype.createJingChaiTableCell = function (arr) {
	if(arr.length <= 0){
		return;
	}

	for(var i = 0; i < arr.length; i++){
		var group = new jingChaiPrefab(this.game, this.fGroupOne);
		group.createAndInit();
		group.setInfo(arr[i]);
		group.position.setTo(0, this.touchPoint.cellHeightMin);
		group.getJingChaiHeight();

		//其他的元素向下位移
		for(var j = 0; j < this.fGroupOne.children.length - 1; j++){
			this.fGroupOne.getChildAt(j).y += group.getJingChaiHeight();
		}
	}
};

menuPrefabLayer.prototype.onMoveCallBack = function (point, x, y, isTap) {
	var menuPre = gGame.gameScene.fMenuLayer;

	if(!menuPre.touchPoint.isDown){
		return;
	}

	menuPre.updatePos(menuPre.touchPoint.pointY - point.y);
	menuPre.touchPoint.pointY = point.y;
	menuPre.touchPoint.isMoved = true;
};

menuPrefabLayer.prototype.onDown = function (point, x, y, isTap) {
	var menuPre = gGame.gameScene.fMenuLayer;
	menuPre.touchPoint.pointY = point.y;
	menuPre.touchPoint.isMoved = false;
	menuPre.touchPoint.isDown = true;
};

menuPrefabLayer.prototype.onUp = function (point, x, y, isTap) {
	var menuPre = gGame.gameScene.fMenuLayer;
	menuPre.touchPoint.isDown = false;
	if(!menuPre.resetPositionUp()){
		menuPre.resetPositionDown();
	}
};

menuPrefabLayer.prototype.updatePos = function (disY) {
	var len = this.fGroupOne.children.length;
	if(len === 0){
		return;
	}

	var up = this.fGroupOne.getChildAt(len - 1);
	var bottom = this.fGroupOne.getChildAt(0);

	//check from up to down
	if(up.y > this.touchPoint.cellHeightMin && disY < 0){
		disY /= 3;
	}

	//check from down to up
	if(bottom.y + bottom.getJingChaiHeight() < this.touchPoint.cellHeightMax + this.touchPoint.cellHeightMin - 10
		&& disY > 0){
		disY /= 6;
	}

	for(var i = 0; i < this.fGroupOne.children.length; i++){
		this.fGroupOne.getChildAt(i).y -= disY;
	}
};

menuPrefabLayer.prototype.initJingChai = function () {
	var menu = gGame.gameScene.fMenuLayer;

	//注册事件
	this.game.input.onDown.add(this.onDown, "down");
	this.game.input.onUp.add(this.onUp, "up");
	this.game.input.addMoveCallback(this.onMoveCallBack, "move");

	//创建table
	menu.createJingChaiTableCell(gRoomInfo.tenBetHistory);

	if(gUserInfo.betHistory.length > 0){
		var obj = [{}];
		obj[0].leftNick = gRoomInfo.leftTeam.nick;
		obj[0].rightNick = gRoomInfo.rightTeam.nick;
		obj[0].bet = gUserInfo.betHistory;
		obj[0].leftScore = gRoomInfo.leftTeam.score;
		obj[0].rightScore = gRoomInfo.rightTeam.score;
		menu.createJingChaiTableCell(obj);
	}
};

menuPrefabLayer.prototype.resetPositionUp = function () {
	var len = this.fGroupOne.children.length;
	if(len === 0){
		return false;
	}

	var up = this.fGroupOne.getChildAt(len - 1);
	var disY = up.y - this.touchPoint.cellHeightMin;
	if(disY < 0){
		return false;
	}

	for(var i = 0; i < len; i++){
		var group = this.fGroupOne.getChildAt(i);
		this.game.add.tween(group).to({"x":group.x, "y":group.y - disY}, 300,
			Phaser.Easing.Exponential.Out, true);
	}

	return true;
};

menuPrefabLayer.prototype.resetPositionDown = function () {
	var len = this.fGroupOne.children.length;
	if(len === 0){
		return;
	}

	var up = this.fGroupOne.getChildAt(len - 1);
	var bottom = this.fGroupOne.getChildAt(0);
	var totalHight = 0;

	for(var i = 0; i < len; i++){
		totalHight += this.fGroupOne.getChildAt(i).getJingChaiHeight();
	}

	var disY = 0;

	if(totalHight < this.touchPoint.cellHeightMax - this.touchPoint.cellHeightMin){
		disY = up.y - this.touchPoint.cellHeightMin;

		for(var i = 0; i < len; i++){
			var group = this.fGroupOne.getChildAt(i);
			this.game.add.tween(group).to({"x":group.x, "y":group.y - disY}, 300,
				Phaser.Easing.Exponential.Out, true);
		}

		return true;
	}

	var disY = bottom.y + bottom.getJingChaiHeight() - this.touchPoint.cellHeightMax -
		this.touchPoint.cellHeightMin - 10;

	if(disY > 0){
		return false;
	}

	for(var i = 0; i < len; i++){
		var group = this.fGroupOne.getChildAt(i);
		this.game.add.tween(group).to({"x":group.x, "y":group.y - disY}, 300,
			Phaser.Easing.Exponential.Out, true);
	}

	return true;
};

menuPrefabLayer.prototype.setGroupAppear = function (group) {
	group.scale.x = 1;

	for(var i = 0; i < group.children.length; i++){
		group.getChildAt(i).scale.x = 1;
	}
};

menuPrefabLayer.prototype.setGroupClose = function (group) {
	group.scale.x = 0;

	for(var i = 0; i < group.children.length; i++){
		group.getChildAt(i).scale.x = 0;
	}
};

menuPrefabLayer.prototype.setMask = function () {
	var graphics = this.game.add.graphics(0, 0);
	graphics.beginFill("0xffffff"); //必须要填充一个颜色
	var circle = graphics.drawRect(0, this.touchPoint.cellHeightMin, 750,
		this.touchPoint.cellHeightMax); //画一个圆
	this.fGroupOne.mask = circle;
};