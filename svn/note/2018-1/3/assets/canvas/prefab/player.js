
// -- user code here --

/* --- start generated code --- */

// Generated by  1.4.4 (Phaser v2.6.2)


/**
 * player.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function player(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	this.game.add.sprite(0, -1, 'bg2', 'logo.png', this);
	
	var _nick = this.game.add.text(144, 18, 'nick', {"font":"bold 20px Arial"}, this);
	
	var _btn_chongzhi = this.game.add.button(325, 38, 'btn', this.clickChongzhi, this, null, 'cohngzhi.png', null, null, this);
	
	var _coin_png = this.game.add.sprite(106, 49, 'bg2', 'coin.png', this);
	
	
	
	// public fields
	
	this.fNick = _nick;
	this.fBtn_chongzhi = _btn_chongzhi;
	this.fCoin_png = _coin_png;
	/* --- post-init-begin --- */
	// you can insert code here

	//create Text
	this.createPowerAltas();
	this.updateMess();

	/* --- post-init-end --- */
	
	
}

/** @type Phaser.Group */
var player_proto = Object.create(Phaser.Group.prototype);
player.prototype = player_proto;
player.prototype.constructor = player;

/* --- end generated code --- */
// -- user code here --
player.prototype.updateMess = function () {
	//update power
	//update icon
	this.fNick.text = gUserInfo.nick || "TestNick";
	this.fPower.text = FormatNumber.symbol(gUserInfo.power + gUserInfo.money + gUserInfo.bonus);

	// var randomIdx = GlobalUtils.RandomIntegerRange(1, 10);
	// gUserInfo.url = "http://mohuan.xblade.cn/poke/icon/" + randomIdx + ".jpg";
	//
	// var father = this.fIconBG;
	// gGame.load.image(gUserInfo.url, gUserInfo.url).onLoadComplete.add(function() {
	// 	gGame.gameScene.addIconSprite(father, gUserInfo.url);
	// });
	// gGame.load.start();
};

player.prototype.actionPowerTween = function () {
	var vTween = this.game.add.tween(this.fPower.scale).to( { x:1.5, y:1.5}, 500,
		Phaser.Easing.Bounce.Out, true);
	vTween.onComplete.add(tweenFunc,this);

	function tweenFunc(fSpr, fTween) {
		vTween = null;
		this.fPower.scale.set(1,1);
	}
};


player.prototype.createPowerAltas = function () {
	var bmpText = this.game.add.bitmapText(200, 100, 'yellow', "9,999,999", 24);
	bmpText.anchor.set(0.5,0.5);
	bmpText.x =  this.fCoin_png.x + bmpText.width*3/4;
	bmpText.y =  this.fCoin_png.y + bmpText.height/2;
	this.addChild(bmpText);

	bmpText.text = 0;
	this.fPower = bmpText;
};

player.prototype.clickChongzhi = function () {
	window.location.href = gGameConf.chongzhiURL;
	//window.open(gGameConf.chongzhiURL);
};

player.prototype.initOnce = function () {
	gGame.gameScene.setAnchorMiddle(this.fBtn_chongzhi);
	this.fBtn_chongzhi.onInputDown.add(gGame.gameScene.clickDownEvent,this);
	this.fBtn_chongzhi.onInputUp.add(gGame.gameScene.clickUpEvent,this);

};